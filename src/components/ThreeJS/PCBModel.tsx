/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 Kicad.gltf --transform --types --output PCBModel 
Files: Kicad.gltf [5.31MB] > /Users/adam/Desktop/gltf/Kicad-transformed.glb [1.04MB] (80%)
*/

import { InstancedMesh, Mesh, MeshStandardMaterial } from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Body1: Mesh;
    Body1_1: Mesh;
    Body1_2: InstancedMesh;
    Body1_3: InstancedMesh;
    Body1_4: InstancedMesh;
    Body1_5: InstancedMesh;
    Body1_6: InstancedMesh;
  };
  materials: {
    PaletteMaterial001: MeshStandardMaterial;
    PaletteMaterial002: MeshStandardMaterial;
  };
};

const PCBModel = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes, materials } = useGLTF("/PCBModel.glb") as GLTFResult;

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Body1.geometry}
        material={materials.PaletteMaterial001}
        position={[0.159, -0.1, 0.002]}
        rotation={[0, 0, Math.PI / 2]}
      />
      <mesh
        geometry={nodes.Body1_1.geometry}
        material={materials.PaletteMaterial002}
        position={[0.15, -0.109, 0.002]}
        rotation={[Math.PI / 2, Math.PI / 2, 0]}
      />
      <instancedMesh
        args={[nodes.Body1_2.geometry, materials.PaletteMaterial001, 40]}
        instanceMatrix={nodes.Body1_2.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Body1_3.geometry, materials.PaletteMaterial001, 40]}
        instanceMatrix={nodes.Body1_3.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Body1_4.geometry, materials.PaletteMaterial001, 10]}
        instanceMatrix={nodes.Body1_4.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Body1_5.geometry, materials.PaletteMaterial001, 10]}
        instanceMatrix={nodes.Body1_5.instanceMatrix}
      />
      <instancedMesh
        args={[nodes.Body1_6.geometry, materials.PaletteMaterial001, 10]}
        instanceMatrix={nodes.Body1_6.instanceMatrix}
      />
    </group>
  );
};

useGLTF.preload("/PCBModel.glb");

export default PCBModel;
